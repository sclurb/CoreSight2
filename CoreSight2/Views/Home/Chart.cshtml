@model CoreSight2.Data.Entities.Readings
@{
    ViewData["Title"] = "Chart";
}

<style>
    .ui-datepicker {
        /*margin-top: 100px;*/
    }

    .littleBobby {
        padding: 10px;
        margin-top: 10px;
    }
    .box{
        pointer-events: none;
    }

    .topofchart {
        margin: 5px;
        border: 4px solid #63501b;
        color: #ffd800;
    }
</style>
<div class="container text-center" >
    <h1>Chart</h1>
    <div class="topofchart" >
        <p>Current Reading Recorded at: @Model.Date</p>
        <div class="row">
            <div class="col-md-3">
                Inside Temperature: @Model.Temp1
            </div>
            <div class="col-md-3">
                Inside Relative Humidity: @Model.Hum1
            </div>
            <div class="col-md-3">
                Outside Temperature: @Model.Temp2
            </div>
            <div class="col-md-3">
                Outside Relative Humidity: @Model.Hum4
            </div>
        </div>
    </div>
    <canvas id="chart" width="600" height="300">
    </canvas>

    <div class="row">

        <div class="col-md-6 input-with-post-icon">
            <p>From Date: <input placeholder="From Date" type="text" id="datepicker-from" autocomplete="off"></p>
        </div>
        <div class="col-md-6">
            <p>To Date: <input placeholder="To Date" type="text" id="datepicker-to" autocomplete="off"></p>
        </div>
        <div class="col-md-12">
            <button type="submit" class="align-middle btn btn-primary btn-lg btn btn-outline-light" id="getDates" onclick="doIt()">Enter Dates</button>
        </div>
        <div class="col-md-12">
            <p>
                Choose dates and press "Enter Dates".   You will get a chart populated with all
                the temperature and relative humidity readings from that time span.
            </p>
            <p>
                Every few minutes, the readings are pushed up to the database on this web server.   The readings go back
                as far as 10/13/2017.
            </p>
        </div>
    </div>


</div>
<script>

        // Data Picker Initialization

        $("#datepicker-from").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd',
        });
        $("#datepicker-to").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd',
        });


        console.log("Hey Man");



            let dates = [];
            let insideTemp = [];
            let outsideTemp = [];
            let insideHum = [];
            let outsideHum = [];
            let from = '2020-05-01T00:00:00.8469332-04:00';
            let to = '2020-05-15T23:59:59.8469332-04:00';


        async function doIt() {
            from = document.getElementById("datepicker-from");
            to = document.getElementById("datepicker-to");
            console.log("From: ", from.value);
            console.log("To: ", to.value);
            chartIt();
        }

          //  //chartIt();



    async function getData() {
        const rawResponse = await fetch('https://phtresources.com/api/chart', {
        //const rawResponse = await fetch('https://localhost:44363/api/chart', {
        //const rawResponse = await fetch('https://192.168.2.8/api/chart', {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            "From": from.value,
                            "To": to.value
                        })
        });
        dates.length = 0;
        insideTemp.length = 0;
        outsideTemp.length = 0;
        insideHum.length = 0;
        outsideHum.length = 0;
                     const content = await rawResponse.json();
                    if (content != null) {
                           content.forEach(function (item) {
                           dates.push(item.date);
                           insideTemp.push(item.temp1);
                           outsideTemp.push(item.temp2);
                           insideHum.push(item.hum4);
                           outsideHum.push(item.hum1);
                        });
                    }
                }


            async function chartIt() {
                await getData();
                console.log("Here is the length: ", insideTemp.length);
                const ctx = document.getElementById('chart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [
                            {
                                xaxisID: 'Dates',
                                yaxisID: 'Temperature',
                                label: 'Outside Temp',
                                data: outsideTemp,
                                showLine: true,
                                backgroundColor: [
                                    'rgba(0, 0, 255, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(40, 92, 247, 2)'
                                ],
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                xaxisID: 'Dates',
                                yaxisID: 'Temperature',
                                label: 'Inside Temp',
                                data: insideTemp,
                                showLine: true,
                                backgroundColor: [
                                    'rgba(255,0, 0, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 64, 250, 4)'
                                ],
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                xaxisID: 'Humidity',
                                yaxisID: 'Relative Humidity',
                                label: 'Inside Humidity',
                                data: insideHum,
                                showLine: true,
                                backgroundColor: [
                                    'rgba(200,200, 200, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(199, 160, 54, 2)'
                                ],
                                borderWidth: 1,
                                fill: false
                            },
                            {
                                xaxisID: 'Humidity',
                                yaxisID: 'Relative Humidity',
                                label: 'Outside Humidity',
                                data: outsideHum,
                                showLine: true,
                                backgroundColor: [
                                    'rgba(0,255, 0, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(64, 255, 64, 2)'
                                ],
                                borderWidth: 1,
                                fill: false
                            }
                        ]

                    },
                    options: {
                        legend: {
                            display: true
                        },
                        scales: {
                            xAxes: [{
                                display: false
                            }],
                            yAxes: [{
                                ticks: {
                                    beginAtZero: false
                                }
                            }]
                        }
                    }
                });
            }

</script>

